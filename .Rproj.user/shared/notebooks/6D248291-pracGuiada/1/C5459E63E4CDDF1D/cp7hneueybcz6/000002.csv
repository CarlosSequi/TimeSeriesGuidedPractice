"0","# calculamos el modelo"
"0","# la diferenciación la introducimos dentro del modelo, por tanto usamos serieTr.SinTend.SinEst"
"0","modelo = arima(serieTr.SinTend.SinEst, order = c(4,1,0)) # 0 indica que no es de medias moviles"
"0","# vemos los residuos del modelo, que al ser un modelo autoregresivo lo calculamos como residuos+serie"
"0","valoresReconstruidos = serieTr.SinTend.SinEst + modelo$residuals # valores reconstruidos de la serie"
"0","                                                                 # con el modelo que tenemos"
"0","# calculamos las predicciones"
"0","predicciones = predict(modelo, n.ahead = NPred)"
"0","valoresPredichos = predicciones$pred"
"0","valoresPredichos"
"1","Time Series:
Start ="
"1"," "
"1","121"
"1"," "
"1","
End ="
"1"," "
"1","132"
"1"," "
"1","
Frequency ="
"1"," "
"1","1"
"1"," "
"1","
"
"1"," [1]"
"1"," -0.10507935"
"1"," -0.11427537"
"1"," -0.09925247"
"1"," -0.09825939"
"1"," -0.10548787"
"1"," -0.10413396"
"1"," -0.10862673"
"1"," -0.10637456"
"1"," -0.10537488"
"1","
"
"1","[10]"
"1"," -0.10509949"
"1"," -0.10442190"
"1"," -0.10536040"
"1","
"
"0","# calculamos el error cuadrático acumulado del ajuste en ajuste y test"
"0","errorTr = sum((modelo$residuals)^2)"
"0","errorTs = sum((valoresPredichos - serieTs.SinTend.SinEst) ^2)"
"0","errorTr"
"1","[1]"
"1"," 0.1344656"
"1","
"
"0","errorTs"
"1","[1]"
"1"," 0.01965443"
"1","
"
